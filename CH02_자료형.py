#02-1 자료형과 문자열
#프로그램은 기본적으로 '자료를 처리'하는 역할 수행
#프로그램이 처리할 수 있는 모든 것을 자료(data)라고 부름
#예시 : 카메라로 사진을 찍으면 사진이 자료이고, 카메라에 저장하는 것이 처리

#자료형(Data Type) : 문자열(string), 숫자(number), 불(boolean)
#자료형 확인하기 
from zmq import PROTOCOL_ERROR_ZMTP_MALFORMED_COMMAND_INITIATE


print(type('안녕하세요'))
print(type(273))
#문자열 만들기
#하나만 출력합니다
print("# 하나만 출력합니다.")
print("Hello Python Programming......!")
print()
 #여러개를 출력합니다
 print("# 여러 개를 출력합니다.")
 print(10, 20, 30, 40, 50)
 print("안녕하세요", "저의", "이름은", "윤인성이니다!")
 #큰따옴표롤 문자열 만들기
 print("안녕하세요")
 #작은따옴표로 문자열 만들기
 print('안녕하세요')
#문자열 내부에 따옴표 넣기
print(""안녕하세요"라고 말했습니다") #오류 발생
print('"안녕하세요"라고 말했습니다')
print("'배가 고픕니다'라고 생각했습니다")
#이스케이프 문자를 사용해 문자열 만들기 
#문자열을 여러 방법으로 만드니까 복잡해요. 저는 한 방법만 사용하고 싶어요
# \" : 큰따옴표를 의미, \' : 작은 따옴표를 의미
print("\"안녕하세요\"라고 말했습니다")
print('\'배가고픕니다\'라고 생각했습니다')
# 다른 이스케이프 문자
# \n : 줄바꿈, \t : 탭
print("안녕하세요\n안녕하세요")
print("안녕하세요\t안녕하세요")

print("이름\t나이\t지역")
print("윤인선\t25\t강서구")
print("윤아린\t24\t강서구")
print("구름\t3\t강서구")
# \\ : 역슬래시(\)를 의미
print("\\ \\ \\ \\")
#여러 줄 문자열 만들기
print("동해물과 백두산이 마르고 닳도록\n하느님이 보우하사 우리나라 만세\n무궁화 삼천리 화려강산 대한사람\n대한으로 길이 보전하세")
print("""동해물과 백두산이 마르고 닳도록
하느님이 보우하사 우리나라 만세
무궁화 삼천리 화려강산
대한사람 대한으로 길이 보전하세""")
#줄바꿈 없이 문자열 만들기
print("""\
    동해물과 백두산이 마르고 닳도록
    하느님이 보우하사 우리나라 만세
    무궁화 삼천리 화려강산
    대한사람 대한으로 길이 보전하세\
        """)
#문자열 연산자
#문자열 연결 연산자 : + 
print("안녕" + "하세요")
print("안녕하세요" + "!")
print("안녕하세요" + 1) #오류 -> 문자열은 문자열끼리만 연결 가능
#문자열 반복 연산자 : *
print("안녕하세요" * 3)
print(3 * "안녕하세요")
#문자 선택 연산자(인덱싱) : []
print("문자 선택 연산자에 대해 알아볼까요?")
print("안녕하세요"[0])
print("안녕하세요"[1])
print("안녕하세요"[2])
print("안녕하세요"[3])
print("안녕하세요"[4])
print("문자를 뒤에서부터 선택해 볼까요?")
print("안녕하세요"[-1])
print("안녕하세요"[-2])
print("안녕하세요"[-3])
print("안녕하세요"[-4])
print("안녕하세요"[-5])
#문자열 범위 선택 연산자(슬라이싱): [:]
print("안녕하세요"[1:4])
print("안녕하세요"[0:2])
print("안녕하세요"[1:3])
print("안녕하세요"[2:4])
print("안녕하세요"[1:])
print("안녕하세요"[:3])
#문자열 선택 연산자로 슬라이스를 하더라도 원본은 변하지 않음
#문자열 길이 구하기 : len()
print(len("안녕하세요"))

#02-2 숫자
#숫자의 종류
print(273)
print(52.273)
#숫자 타입
print(type(52))
print(type(52.273))
#숫자 연산자 
print("5 + 7 =", 5 + 7)
print("5 - 7 =", 5 - 7)
print("5 * 7 =", 5 * 7)
print("5 / 7 = ", 5 / 7)
#정수 나누기 연산자 : // 
print("5 / 2 =", 3 / 2)
print("3 // 2 =", 3 // 2)
#제곱 연산자 : **
print("2 ** 1 =", 2 ** 1)
print("2 ** 2 =", 2 ** 2)
print("2 ** 3 =", 2 ** 3)
print("2 ** 4 =", 2 ** 4)
#나머지
print("2 % 1 =", 2 % 1)
print("5 % 3 =", 5 % 3)
print("100 % 3 =", 100 % 3)
#연산자의 우선순위 
#곱셈, 나눗셈 > 덧셈, 뺄셈
print(2 + 2 - 2 * 2 / 2 * 2) #0.0
print(2 - 2 + 2 / 2 * 2 + 2) #4.0
print((5 + 3) * 2) #16
print(5 + (3 * 2)) #11
#문자열 연산자의 우선 순위 
print("안녕" + "하세요" * 3)   #안녕하세요하세요하세요
print(("안녕" + "하세요") * 3) #안녕하세요안녕하세요안녕하세요
print("안녕" + ("하세요" * 3)) #안녕하세요하세요하세요

#02-3 변수와 입력
#변수 : 값을 저장할 때 사용하는 식별자
#예) pi라는 이름의 상자에 3.14라는 값을 넣고 호출하여 사용
pi = 3.14159265
pi
#변수를 활용하는 방법 
#1. 변수를 선언하는 방법
#   -> 변수를 생성하는 걸 의미. 파이를 사용하겠다라고 선언하는 걸 의미
#2. 변수에 값을 할당하는 방법
#   -> 변수에 값을 넣는 것을 의미. pi=3.14159265, '='기호는 '같다'가 아니라 우변의 값을 좌변에 할당하겠다는 의미
#3. 변수를 참조하는 방밥
#   -> 변수에서 값을 꺼내는 것을 의미. 
pi = 3.14159265
pi + 2
pi - 2
pi * 2
pi / 2
pi % 2
pi * pi
#pi는 숫자자료이기 때문에 문자열과 연산하는 건 안됨
#변수 선언과 할당
pi = 3.14159265
r = 10
#변수 참조
print("원주율 =", pi)
print("반지름 =", r)
print("원의 둘레 =", 2 * pi * r)
print("원의 넓이 =", pi * r * r)
print("원의 넓이 =", pi * (r ** 2))
"""
복합 대입 연산자
+= : 숫자 덧셈 후 대입
-= : 숫자 뺄셈 후 대입
*= : 숫자 곱셈 후 대입
/= : 숫자 나눗셈 후 대입
%= : 숫자의 나머지를 구한 후 대입
**= : 숫자 제곱 후 대입
"""
number = 100
number += 10
number += 20
number += 30
print("number :", number)
"""
문자열 복합 대입 연산자
+= : 문자열 연결 후 대입
*= : 문자열 반복 후 대입
""" 
string = "안녕하세요"
string += "!"
string += "!"
print("string:", string)

#사용자 입력 : input()
#명령 프롬프트에서 사용자로부터 데이터를 입력 받을 경우 사용
input("인사말을 입력하세요>")
string = input("인사말을 입력하세요>")
print(string)
#input()함수의 입력 자료형
print(type(string))

#입력 자료형 확인하기
string = input("입력>")
#출력합니다
print("자료:", string)
print("자료형:", type(string))

#입력받고 더하기
#입력을 받습니다
string = input("입력> ")
#출력합니다
print("입력 + 100:", string + 100) #input은 모두 문자열로 저장되기에 문자열 + 숫자를 더할 수 없음
